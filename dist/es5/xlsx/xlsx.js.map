{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","ZipStream","StreamBuf","PromiseLib","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","CommentXform","theme1Xml","XLSX","module","exports","workbook","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","RelType","prototype","self","stream","exists","then","Error","createReadStream","read","close","parseRels","xform","parseStream","parseWorkbook","parseSharedStrings","reconcile","model","workbookXform","worksheetXform","drawingXform","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","sheetOptions","styles","sharedStrings","date1904","properties","comments","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","processWorksheetEntry","entry","match","path","push","undefined","processCommentEntry","processWorksheetRelsEntry","processMediaEntry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","processDrawingEntry","processDrawingRelsEntry","processThemeEntry","themes","toString","processIgnoreEntry","autodrain","createInputStream","promises","ZipReader","getEntryType","promise","entryPath","sheets","definedNames","views","appXform","appProperties","assign","company","manager","coreXform","coreProperties","destroy","all","emit","zipStream","load","base64","Buffer","write","end","addMedia","zip","map","append","dataimg64","content","substring","indexOf","addDrawings","relsXform","prepare","xml","toXml","addContentTypes","addApp","addCore","addThemes","theme1","addOfficeRels","Type","OfficeDocument","Target","CoreProperties","ExtenderProperties","addWorkbookRels","count","Styles","Theme","SharedStrings","rId","Worksheet","id","addSharedStrings","addStyles","addWorkbook","addWorksheets","relationshipsXform","commentXform","xmlStream","render","_finalize","finalize","prepareModel","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","ZipWriter","afters","writeFile","createWriteStream","writeBuffer"],"mappings":"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","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\nconst PromiseLib = require('../utils/promise');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst CommentXform = require('./xform/comment/comments-xform');\n\nconst theme1Xml = require('./xml/theme1.js');\n\nconst XLSX = (module.exports = function(workbook) {\n  this.workbook = workbook;\n});\n\nfunction fsReadFileAsync(filename, options) {\n  return new PromiseLib.Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nXLSX.RelType = require('./rel-type');\n\nXLSX.prototype = {\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  readFile(filename, options) {\n    const self = this;\n    let stream;\n    return utils.fs\n      .exists(filename)\n      .then(exists => {\n        if (!exists) {\n          throw new Error(`File not found: ${filename}`);\n        }\n        stream = fs.createReadStream(filename);\n        return self.read(stream, options).catch(error => {\n          stream.close();\n          throw error;\n        });\n      })\n      .then(workbook => {\n        stream.close();\n        return workbook;\n      });\n  },\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  },\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  },\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  },\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n  },\n  processWorksheetEntry(entry, model, options) {\n    const match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new WorksheetXform(options);\n      return xform.parseStream(entry).then(worksheet => {\n        worksheet.sheetNo = sheetNo;\n        model.worksheetHash[entry.path] = worksheet;\n        model.worksheets.push(worksheet);\n      });\n    }\n    return undefined;\n  },\n  processCommentEntry(entry, model) {\n    const match = entry.path.match(/xl\\/(comments\\d+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new CommentXform();\n      return xform.parseStream(entry).then(comments => {\n        model.comments[`../${name}.xml`] = comments;\n      });\n    }\n    return undefined;\n  },\n  processWorksheetRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry).then(relationships => {\n        model.worksheetRels[sheetNo] = relationships;\n      });\n    }\n    return undefined;\n  },\n  processMediaEntry(entry, model) {\n    const match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n    if (match) {\n      const filename = match[1];\n      const lastDot = filename.lastIndexOf('.');\n      if (lastDot === -1) {\n        // if we can't determine extension, ignore it\n        return undefined;\n      }\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      return new PromiseLib.Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n    return undefined;\n  },\n  processDrawingEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new DrawingXform();\n      return xform.parseStream(entry).then(drawing => {\n        model.drawings[name] = drawing;\n      });\n    }\n    return undefined;\n  },\n  processDrawingRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n    if (match) {\n      const name = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry).then(relationships => {\n        model.drawingRels[name] = relationships;\n      });\n    }\n    return undefined;\n  },\n  processThemeEntry(entry, model) {\n    const match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      return new PromiseLib.Promise((resolve, reject) => {\n        const name = match[1];\n        // TODO: stream entry into buffer and store the xml in the model.themes[]\n        const stream = new StreamBuf();\n        entry.on('error', reject);\n        stream.on('error', reject);\n        stream.on('finish', () => {\n          model.themes[name] = stream.read().toString();\n          resolve();\n        });\n        entry.pipe(stream);\n      });\n    }\n    return undefined;\n  },\n  processIgnoreEntry(entry) {\n    entry.autodrain();\n  },\n  createInputStream(options) {\n    const self = this;\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n    };\n\n    // we have to be prepared to read the zip entries in whatever order they arrive\n    const promises = [];\n    const stream = new ZipStream.ZipReader({\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\n    });\n    stream.on('entry', entry => {\n      let promise = null;\n\n      let entryPath = entry.path;\n      if (entryPath[0] === '/') {\n        entryPath = entryPath.substr(1);\n      }\n      switch (entryPath) {\n        case '_rels/.rels':\n          promise = self.parseRels(entry).then(relationships => {\n            model.globalRels = relationships;\n          });\n          break;\n\n        case 'xl/workbook.xml':\n          promise = self.parseWorkbook(entry).then(workbook => {\n            model.sheets = workbook.sheets;\n            model.definedNames = workbook.definedNames;\n            model.views = workbook.views;\n            model.properties = workbook.properties;\n          });\n          break;\n\n        case 'xl/_rels/workbook.xml.rels':\n          promise = self.parseRels(entry).then(relationships => {\n            model.workbookRels = relationships;\n          });\n          break;\n\n        case 'xl/sharedStrings.xml':\n          model.sharedStrings = new SharedStringsXform();\n          promise = model.sharedStrings.parseStream(entry);\n          break;\n\n        case 'xl/styles.xml':\n          model.styles = new StylesXform();\n          promise = model.styles.parseStream(entry);\n          break;\n\n        case 'docProps/app.xml': {\n          const appXform = new AppXform();\n          promise = appXform.parseStream(entry).then(appProperties => {\n            Object.assign(model, {\n              company: appProperties.company,\n              manager: appProperties.manager,\n            });\n          });\n          break;\n        }\n\n        case 'docProps/core.xml': {\n          const coreXform = new CoreXform();\n          promise = coreXform.parseStream(entry).then(coreProperties => {\n            Object.assign(model, coreProperties);\n          });\n          break;\n        }\n\n        default:\n          promise =\n            self.processWorksheetEntry(entry, model, options) ||\n            self.processWorksheetRelsEntry(entry, model) ||\n            self.processThemeEntry(entry, model) ||\n            self.processMediaEntry(entry, model) ||\n            self.processDrawingEntry(entry, model) ||\n            self.processCommentEntry(entry, model) ||\n            self.processDrawingRelsEntry(entry, model) ||\n            self.processIgnoreEntry(entry);\n          break;\n      }\n\n      if (promise) {\n        promise = promise.catch(error => {\n          stream.destroy(error);\n          throw error;\n        });\n\n        promises.push(promise);\n        promise = null;\n      }\n    });\n    stream.on('finished', () => {\n      PromiseLib.Promise.all(promises)\n        .then(() => {\n          self.reconcile(model, options);\n\n          // apply model\n          self.workbook.model = model;\n        })\n        .then(() => {\n          stream.emit('done');\n        })\n        .catch(error => {\n          stream.emit('error', error);\n        });\n    });\n    return stream;\n  },\n\n  read(stream, options) {\n    options = options || {};\n    const self = this;\n    const zipStream = this.createInputStream(options);\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(self.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n      stream.pipe(zipStream);\n    });\n  },\n\n  load(data, options) {\n    const self = this;\n    if (options === undefined) {\n      options = {};\n    }\n    const zipStream = this.createInputStream();\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(self.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n\n      if (options.base64) {\n        const buffer = new Buffer(data.toString(), 'base64');\n        zipStream.write(buffer);\n      } else {\n        zipStream.write(data);\n      }\n      zipStream.end();\n    });\n  },\n\n  // =========================================================================\n  // Write\n\n  addMedia(zip, model) {\n    return PromiseLib.Promise.all(\n      model.media.map(medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            return fsReadFileAsync(medium.filename).then(data => {\n              zip.append(data, { name: filename });\n            });\n          }\n          if (medium.buffer) {\n            return new PromiseLib.Promise(resolve => {\n              zip.append(medium.buffer, { name: filename });\n              resolve();\n            });\n          }\n          if (medium.base64) {\n            return new PromiseLib.Promise(resolve => {\n              const dataimg64 = medium.base64;\n              const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n              zip.append(content, { name: filename, base64: true });\n              resolve();\n            });\n          }\n        }\n        return PromiseLib.Promise.reject(new Error('Unsupported media'));\n      })\n    );\n  },\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n    const promises = [];\n\n    model.worksheets.forEach(worksheet => {\n      const { drawing } = worksheet;\n      if (drawing) {\n        promises.push(\n          new PromiseLib.Promise(resolve => {\n            drawingXform.prepare(drawing, {});\n            let xml = drawingXform.toXml(drawing);\n            zip.append(xml, { name: `xl/drawings/${drawing.name}.xml` });\n\n            xml = relsXform.toXml(drawing.rels);\n            zip.append(xml, { name: `xl/drawings/_rels/${drawing.name}.xml.rels` });\n\n            resolve();\n          })\n        );\n      }\n    });\n\n    return PromiseLib.Promise.all(promises);\n  },\n\n  addContentTypes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, { name: '[Content_Types].xml' });\n      resolve();\n    });\n  },\n\n  addApp(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, { name: 'docProps/app.xml' });\n      resolve();\n    });\n  },\n\n  addCore(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const coreXform = new CoreXform();\n      zip.append(coreXform.toXml(model), { name: 'docProps/core.xml' });\n      resolve();\n    });\n  },\n\n  addThemes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const themes = model.themes || { theme1: theme1Xml };\n      Object.keys(themes).forEach(name => {\n        const xml = themes[name];\n        const path = `xl/theme/${name}.xml`;\n        zip.append(xml, { name: path });\n      });\n      resolve();\n    });\n  },\n\n  addOfficeRels(zip) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        { Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml' },\n        { Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml' },\n        { Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml' },\n      ]);\n      zip.append(xml, { name: '_rels/.rels' });\n      resolve();\n    });\n  },\n\n  addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      { Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml' },\n      { Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml' },\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({ Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml' });\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({ Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml` });\n    });\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      zip.append(xml, { name: 'xl/_rels/workbook.xml.rels' });\n      resolve();\n    });\n  },\n  addSharedStrings(zip, model) {\n    if (!model.sharedStrings || !model.sharedStrings.count) {\n      return PromiseLib.Promise.resolve();\n    }\n    return new PromiseLib.Promise(resolve => {\n      zip.append(model.sharedStrings.xml, { name: 'xl/sharedStrings.xml' });\n      resolve();\n    });\n  },\n  addStyles(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const { xml } = model.styles;\n      if (xml) {\n        zip.append(xml, { name: 'xl/styles.xml' });\n      }\n      resolve();\n    });\n  },\n  addWorkbook(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new WorkbookXform();\n      zip.append(xform.toXml(model), { name: 'xl/workbook.xml' });\n      resolve();\n    });\n  },\n  addWorksheets(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      // preparation phase\n      const worksheetXform = new WorksheetXform();\n      const relationshipsXform = new RelationshipsXform();\n      const commentXform = new CommentXform();\n\n      // write sheets\n      model.worksheets.forEach(worksheet => {\n        let xmlStream = new XmlStream();\n        worksheetXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, { name: `xl/worksheets/sheet${worksheet.id}.xml` });\n\n        if (worksheet.rels && worksheet.rels.length) {\n          xmlStream = new XmlStream();\n          relationshipsXform.render(xmlStream, worksheet.rels);\n          zip.append(xmlStream.xml, { name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels` });\n        }\n\n        if (worksheet.comments.length > 0) {\n          xmlStream = new XmlStream();\n          commentXform.render(xmlStream, worksheet);\n          zip.append(xmlStream.xml, { name: `xl/comments${worksheet.id}.xml` });\n        }\n      });\n\n      resolve();\n    });\n  },\n  _finalize(zip) {\n    return new PromiseLib.Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  },\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    model.worksheets.forEach(worksheet => {\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  },\n  write(stream, options) {\n    options = options || {};\n    const { model } = this.workbook;\n    const zip = new ZipStream.ZipWriter();\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    return PromiseLib.Promise.resolve()\n      .then(() => this.addContentTypes(zip, model))\n      .then(() => this.addOfficeRels(zip, model))\n      .then(() => this.addWorkbookRels(zip, model))\n      .then(() => this.addWorksheets(zip, model))\n      .then(() => this.addSharedStrings(zip, model)) // always after worksheets\n      .then(() => this.addDrawings(zip, model))\n      .then(() => {\n        const promises = [this.addThemes(zip, model), this.addStyles(zip, model)];\n        return PromiseLib.Promise.all(promises);\n      })\n      .then(() => this.addMedia(zip, model))\n      .then(() => {\n        const afters = [this.addApp(zip, model), this.addCore(zip, model)];\n        return PromiseLib.Promise.all(afters);\n      })\n      .then(() => this.addWorkbook(zip, model))\n      .then(() => this._finalize(zip));\n  },\n  writeFile(filename, options) {\n    const self = this;\n    const stream = fs.createWriteStream(filename);\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      self\n        .write(stream, options)\n        .then(() => {\n          stream.end();\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  },\n  writeBuffer(options) {\n    const self = this;\n    const stream = new StreamBuf();\n    return self.write(stream, options).then(() => stream.read());\n  },\n};\n"],"file":"xlsx.js"}